import {
  BaseExampleSelector,
  BasePromptSelector,
  ConditionalPromptSelector,
  LengthBasedExampleSelector,
  SemanticSimilarityExampleSelector,
  isChatModel,
  isLLM
} from "./chunk-L3H6KQIY.js";
import {
  PipelinePromptTemplate
} from "./chunk-6ZARROKJ.js";
import {
  AIMessagePromptTemplate,
  BaseChatPromptTemplate,
  ChatMessagePromptTemplate,
  ChatPromptTemplate,
  FewShotChatMessagePromptTemplate,
  FewShotPromptTemplate,
  HumanMessagePromptTemplate,
  MessagesPlaceholder,
  SystemMessagePromptTemplate
} from "./chunk-STHQRCYF.js";
import {
  BasePromptTemplate,
  BaseStringPromptTemplate,
  PromptTemplate,
  checkValidTemplate,
  parseTemplate,
  renderTemplate
} from "./chunk-72FLS7GP.js";
import "./chunk-U3SRZ3O6.js";
import "./chunk-E76NY7HK.js";
import {
  getEnvironmentVariable
} from "./chunk-GR5B2AZM.js";
import {
  StringPromptValue
} from "./chunk-ZVTWDQPW.js";
import "./chunk-DHHR7DPN.js";

// node_modules/langchain/dist/util/entrypoint_deprecation.js
function logVersion010MigrationWarning({ oldEntrypointName, newEntrypointName, newPackageName = "@langchain/community" }) {
  let finalEntrypointName = "";
  if (newEntrypointName === void 0) {
    finalEntrypointName = `/${oldEntrypointName}`;
  } else if (newEntrypointName !== "") {
    finalEntrypointName = `/${newEntrypointName}`;
  }
  let warningText = [
    `[WARNING]: Importing from "langchain/${oldEntrypointName}" is deprecated.`,
    ``,
    `Instead, please add the "${newPackageName}" package to your project with e.g.`,
    ``,
    `    $ npm install ${newPackageName}`,
    ``,
    `and import from "${newPackageName}${finalEntrypointName}".`,
    ``,
    `This will be mandatory after the next "langchain" minor version bump to 0.2.`
  ].join("\n");
  if (newPackageName === "@langchain/core") {
    warningText = [
      `[WARNING]: Importing from "langchain/${oldEntrypointName}" is deprecated.`,
      ``,
      `Instead, please import from "${newPackageName}${finalEntrypointName}".`,
      ``,
      `This will be mandatory after the next "langchain" minor version bump to 0.2.`
    ].join("\n");
  }
  if (getEnvironmentVariable("LANGCHAIN_SUPPRESS_MIGRATION_WARNINGS") !== "true") {
    console.warn(warningText);
  }
}

// node_modules/langchain/dist/prompts/index.js
logVersion010MigrationWarning({
  oldEntrypointName: "prompts",
  newEntrypointName: "prompts",
  newPackageName: "@langchain/core"
});
export {
  AIMessagePromptTemplate,
  BaseChatPromptTemplate,
  BaseExampleSelector,
  BasePromptSelector,
  BasePromptTemplate,
  BaseStringPromptTemplate,
  ChatMessagePromptTemplate,
  ChatPromptTemplate,
  ConditionalPromptSelector,
  FewShotChatMessagePromptTemplate,
  FewShotPromptTemplate,
  HumanMessagePromptTemplate,
  LengthBasedExampleSelector,
  MessagesPlaceholder,
  PipelinePromptTemplate,
  PromptTemplate,
  SemanticSimilarityExampleSelector,
  StringPromptValue,
  SystemMessagePromptTemplate,
  checkValidTemplate,
  isChatModel,
  isLLM,
  parseTemplate,
  renderTemplate
};
//# sourceMappingURL=langchain_prompts.js.map
